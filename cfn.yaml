AWSTemplateFormatVersion: 2010-09-09
Description: Fetching the latest GeoIP database and putting it in S3 for Ophan
Parameters:
  App:
    Description: Application name
    Type: String
    Default: es-node-aws-protector
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logging
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
        - PolicyName: es-node-aws-protector-actions
          PolicyDocument:
            Statement:
              # Protect ElasticSearch instances
              - Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeTags
                  - ec2:ModifyInstanceAttribute
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeAutoScalingInstances
                  - autoscaling:SetInstanceProtection
                Effect: Allow
                Resource: '*'

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: ophan-dist
        S3Key: ophan/PROD/es-node-aws-protector/es-node-aws-protector.jar
      Description: Elasticsearch node protector for Ophan
      Handler: protector.Lambda::handler
      MemorySize: 1024
      Role: !GetAtt ExecutionRole.Arn
      Runtime: java11
      Architectures:
        - arm64
      Timeout: 120

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minutes)
      Targets:
        - Arn: !GetAtt [Lambda, Arn]
          Id: EsNodeAwsProtectorLambda

  # Permission to allow the event rule to trigger the lambda
  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Lambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt [ScheduledRule, Arn]